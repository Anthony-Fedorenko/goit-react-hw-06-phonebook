{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/Section/Section.module.css","components/Section/Section.js","Redux/contacts/contacts-actions.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","Redux/contacts/contacts-reducer.js","Redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","Section","children","className","styles","section","addContact","createAction","name","number","payload","id","v4","deleteContact","changeFilter","connect","contacts","items","dispatch","onSubmit","contact","contactsActions","useState","setName","setNumber","handleChange","event","currentTarget","value","reset","preventDefault","options","find","toLowerCase","alert","form","label","input","onChange","type","pattern","title","required","button","state","filter","target","getVisibleContacts","allContacts","normalizedFilter","includes","onDelete","list","map","item","onClick","App","createReducer","actions","action","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","contactsReducer","devtools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.1cdf8ebe.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__28FSm\",\"item\":\"ContactList_item__qIKLC\",\"button\":\"ContactList_button__NbNDK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__UJm7t\",\"label\":\"Filter_label__1-kji\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__2d-nt\"};","import PropTypes from 'prop-types'\r\nimport styles from './Section.module.css'\r\n\r\nconst Section = ({children}) => (\r\n    <section className={styles.section}> {children}\r\n    </section>\r\n)\r\nSection.propTypes = {\r\n    children: PropTypes.node,\r\n}\r\nexport default Section","import {createAction} from '@reduxjs/toolkit'\r\nimport {v4} from 'uuid'\r\n\r\nconst addContact = createAction('contacts/add', ({name, number}) => ({\r\n    payload: {\r\n        id: v4(),\r\n        name,\r\n        number,\r\n    },\r\n}))\r\nconst deleteContact = createAction('contacts/delete')\r\nconst changeFilter = createAction('contacts/changeFilter')\r\n\r\nexport default {addContact, deleteContact, changeFilter}","import {useState} from \"react\";\r\nimport styles from './ContactForm.module.css'\r\nimport {connect} from 'react-redux'\r\nimport contactsActions from '../../Redux/contacts/contacts-actions'\r\n\r\n\r\nfunction ContactForm({onSubmit, contacts}) {\r\n\r\n    const [name, setName] = useState('');\r\n    const [number, setNumber] = useState('')\r\n\r\n\r\n    const handleChange = event => {\r\n        const {name, value} = event.currentTarget\r\n        switch (name) {\r\n            case 'name' :\r\n                setName(value);\r\n                break;\r\n            case 'number' :\r\n                setNumber(value);\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n    }\r\n    const handleSubmit = event => {\r\n        event.preventDefault()\r\n        const options = {name, number}\r\n        if (\r\n            contacts.find(\r\n                contact => name.toLowerCase() === contact.name.toLowerCase(),\r\n            )\r\n        ) {\r\n            alert(`${name} is already in contacts`)\r\n        } else {\r\n            onSubmit(options)\r\n        }\r\n        reset()\r\n    }\r\n    const reset = () => {\r\n        setName('')\r\n        setNumber('')\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <form onSubmit={handleSubmit} className={styles.form}>\r\n            <label className={styles.label}> Name\r\n                <input className={styles.input}\r\n                       onChange={handleChange}\r\n                       value={name}\r\n                       type=\"text\"\r\n                       name=\"name\"\r\n                       pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                       title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                       required\r\n                />\r\n            </label>\r\n            <label className={styles.label}> Number\r\n                <input className={styles.input}\r\n                       onChange={handleChange}\r\n                       value={number}\r\n                       type=\"tel\"\r\n                       name=\"number\"\r\n                       pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                       title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                       required\r\n                />\r\n            </label>\r\n            <button type=\"Submit\" className={styles.button}>Add</button>\r\n\r\n        </form>\r\n    )\r\n\r\n}\r\nconst mapStateToProps = ({contacts: {items}}) => ({\r\n    contacts: items,\r\n})\r\nconst mapDispatchToProps = dispatch => ({\r\n    onSubmit: contact => dispatch(contactsActions.addContact(contact))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm)","import PropTypes from 'prop-types'\r\nimport styles from './Filter.module.css'\r\nimport {connect} from \"react-redux\";\r\nimport contactsActions from '../../Redux/contacts/contacts-actions'\r\n\r\nconst Filter = ({value, onChange}) => (\r\n    <label className={styles.label}>\r\n        <input type=\"text\" value={value} onChange={onChange} className={styles.input}/>\r\n    </label>\r\n)\r\nFilter.propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n}\r\nconst mapStateToProps = state => ({\r\n    value: state.contacts.filter,\r\n})\r\nconst mapDispatchToProps = dispatch => ({\r\n    onChange: event => dispatch(contactsActions.changeFilter(event.target.value)),\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter)","import PropTypes from 'prop-types'\r\nimport styles from './ContactList.module.css'\r\nimport {connect} from \"react-redux\";\r\nimport contactsActions from '../../Redux/contacts/contacts-actions'\r\n\r\nconst ContactList = ({contacts, onDelete}) => {\r\n    return (\r\n        <ul className={styles.list}>\r\n            {contacts.map(({id, name, number}) => (\r\n                <li key={id} className={styles.item}>\r\n                    {name}: {number}\r\n                    <button onClick={() => onDelete(id)} type=\"button\" className={styles.button}>DELETE</button>\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    )\r\n}\r\nContactList.propTypes = {\r\n    contacts: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.string.isRequired,\r\n            name: PropTypes.string.isRequired,\r\n            number: PropTypes.string.isRequired,\r\n        }),\r\n    ).isRequired,\r\n    onDelete: PropTypes.func.isRequired,\r\n}\r\nconst getVisibleContacts = (allContacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase()\r\n    return allContacts.filter(({name}) =>\r\n    name.toLowerCase().includes(normalizedFilter),\r\n    )\r\n}\r\nconst mapStateToProps = ({contacts: {filter, items}}) => ({\r\n    contacts: getVisibleContacts(items, filter),\r\n})\r\nconst mapDispatchToProps = dispatch => ({\r\n    onDelete: id => dispatch(contactsActions.deleteContact(id)),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList)","import './App.css';\nimport Section from \"./components/Section/Section\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport Filter from \"./components/Filter/Filter\";\nimport ContactList from \"./components/ContactList/ContactList\";\n\nfunction App() {\n  return (\n      <Section>\n        <h1>Phonebook</h1>\n        <ContactForm />\n        <h2>Contacts</h2>\n        <Filter />\n        <ContactList />\n      </Section>\n  )\n}\n\n\n\nexport default App;\n","import {combineReducers} from \"redux\";\r\nimport {createReducer} from \"@reduxjs/toolkit\";\r\nimport actions from './contacts-actions'\r\n\r\nconst items = createReducer([], {\r\n    [actions.addContact]: (state, action) => [...state, action.payload],\r\n    [actions.deleteContact]: (state, action) => [\r\n        ...state.filter(({id}) => id !== action.payload),\r\n    ],\r\n})\r\nconst filter = createReducer('', {\r\n    [actions.changeFilter]: (_, {payload}) => payload,\r\n})\r\n\r\nexport default combineReducers({\r\n    items,\r\n    filter,\r\n})","import logger from 'redux-logger'\r\nimport {configureStore, getDefaultMiddleware} from \"@reduxjs/toolkit\";\r\nimport {\r\n    persistStore,\r\n    persistReducer,\r\n    FLUSH,\r\n    REHYDRATE,\r\n    PAUSE,\r\n    PERSIST,\r\n    PURGE,\r\n    REGISTER,\r\n} from 'redux-persist'\r\nimport  storage from 'redux-persist/lib/storage'\r\nimport contactsReducer from './contacts/contacts-reducer'\r\n\r\nconst middleware = [\r\n    ...getDefaultMiddleware({\r\n        serializableCheck: {\r\n            ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n        },\r\n    }),\r\n    logger,\r\n]\r\n\r\nconst contactsPersistConfig = {\r\n    key: 'contacts',\r\n    storage,\r\n    blacklist: ['filter'],\r\n}\r\nconst store = configureStore({\r\n    reducer: {\r\n        contacts: persistReducer(contactsPersistConfig, contactsReducer),\r\n    },\r\n    middleware,\r\n    devtools: process.env.NODE_ENV === 'development'\r\n})\r\nconst persistor = persistStore(store)\r\n\r\nexport default {store, persistor}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {Provider} from \"react-redux\";\nimport {PersistGate} from \"redux-persist/integration/react\";\nimport store from \"./Redux/store\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store.store}>\n            <PersistGate loading={null} persistor={store.persistor}>\n                <App/>\n            </PersistGate>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1mjYk\",\"label\":\"ContactForm_label__3YNzf\",\"input\":\"ContactForm_input__2ihXK\",\"button\":\"ContactForm_button__3Nzli\"};"],"sourceRoot":""}